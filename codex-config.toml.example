
# Example Codex CLI configuration generated by the Agilai installer.
# Copy to ~/.codex/config.toml if you want to customize manually.

[cli]
# Default reasoning model to use for Agilai work.
default_model = "GPT-5-Codex"
# Medium reasoning balances quality with latency for day-to-day tasks.
reasoning_level = "medium"
# Automatically approve Agilai-triggered actions so the workflow stays hands-off.
approval_mode = "auto"

[mcp_servers.agilai]
# Launch the Agilai MCP server via npx so it always uses the packaged version.
type = "command"
command = "npx"
args = ["agilai", "mcp"]
auto_start = true
# Optional description shown in Codex CLI listings.
description = "Agilai Orchestrator MCP server"

# Add any environment variables needed by the MCP server here.
[mcp_servers.agilai.env]
# EXAMPLE: AGILAI_LOG_LEVEL = "debug"
# AGILAI_LOG_LEVEL = "debug"

[mcp_servers.chrome_devtools]
# Optional Chrome DevTools recorder MCP server (install package separately).
type = "command"
command = "npx"
args = ["@modelcontextprotocol/server-chrome-devtools@latest"]
auto_start = false
description = "Chrome DevTools MCP helper (disabled until installed)"

[mcp_servers.shadcn]
# Optional shadcn UI MCP helper exposed by the shadcn CLI.
type = "command"
command = "npx"
args = ["@shadcn/ui-cli@latest", "mcp"]
auto_start = false
description = "shadcn UI MCP helper (pairs with generated components.json)"

